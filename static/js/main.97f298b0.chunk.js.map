{"version":3,"sources":["components/TopBar.tsx","data/WeekData.ts","components/BitForWeek.tsx","components/MainContent.tsx","App.tsx","theme.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","title","TopBar","classes","className","AppBar","position","Toolbar","Typography","variant","WeekData","name","value","control","padding","spacing","itemButton","width","height","border","itemBox","utilButton","BitGrid","props","toggled","clickCallback","Grid","item","Button","type","onClick","e","preventDefault","Box","Divider","mt","BitForWeek","maxValue","useState","bitValue","setBitValue","onBitClick","Paper","container","xs","FormLabel","map","o","index","justify","alignContent","alignItems","TextField","onChange","event","inputValue","target","parsedInt","parseInt","Number","isFinite","onFocus","select","inputProps","inputMode","pattern","style","textAlign","min","max","MainContent","mb","path","component","Copyright","color","align","Date","getFullYear","App","Container","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.97f298b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function TopBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Tools\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","interface WeekStruct {\r\n  name: string,\r\n  value: number\r\n}\r\n\r\nconst WeekData: Array<WeekStruct> = [\r\n  {\r\n    name: '-',\r\n    value: 1 << 7\r\n  },\r\n  {\r\n    name: '周一',\r\n    value: 1 << 6\r\n  },\r\n  {\r\n    name: '周二',\r\n    value: 1 << 5\r\n  },\r\n  {\r\n    name: '周三',\r\n    value: 1 << 4\r\n  },\r\n  {\r\n    name: '周四',\r\n    value: 1 << 3\r\n  },\r\n  {\r\n    name: '周五',\r\n    value: 1 << 2\r\n  },\r\n  {\r\n    name: '周六',\r\n    value: 1 << 1\r\n  },\r\n  {\r\n    name: '周七',\r\n    value: 1 << 0\r\n  },\r\n];\r\n\r\nexport default WeekData;","import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Box, Button, Divider, FormLabel, TextField, Typography } from '@material-ui/core';\r\nimport WeekData from '../data/WeekData';\r\n\r\n// noinspection TypeScriptValidateTypes\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    control: {\r\n      padding: theme.spacing(2),\r\n    },\r\n\r\n    itemButton: {\r\n      width: '8rem',\r\n      height: '8rem',\r\n      border: '.1rem solid'\r\n    },\r\n    itemBox: {\r\n      width: '100%',\r\n      height: '100%'\r\n    },\r\n\r\n    utilButton: {\r\n      border: '.1rem solid'\r\n    }\r\n  }),\r\n);\r\n\r\nconst BitGrid = (props: { name: string, value: number, toggled: boolean, clickCallback: (bitValue: number) => void }) => {\r\n  const classes = useStyles();\r\n  const { name, value, toggled, clickCallback } = props;\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    if (!clickCallback) {\r\n      return;\r\n    }\r\n\r\n    clickCallback(value);\r\n  };\r\n\r\n  return (\r\n    <Grid item>\r\n      <Button type=\"button\" className={classes.itemButton} onClick={handleClick}>\r\n        <Box className={classes.itemBox}>\r\n          <Typography variant=\"h6\">{name}</Typography>\r\n          <Divider />\r\n          <Box mt={1}>\r\n            <Typography variant=\"h3\">{toggled ? 1 : 0}</Typography>\r\n          </Box>\r\n        </Box>\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default function BitForWeek() {\r\n  const minValue: number = 0;\r\n  const maxValue: number = 255;\r\n\r\n  const classes = useStyles();\r\n  const [bitValue, setBitValue] = useState(0b00000000);\r\n\r\n  const onBitClick = (value: number) => {\r\n    const v = bitValue ^ value;\r\n    setBitValue(v);\r\n  };\r\n\r\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    const inputValue = event.target.value;\r\n    let parsedInt = parseInt(inputValue);\r\n    if (!Number.isFinite(parsedInt)) {\r\n      return;\r\n    }\r\n\r\n    if (parsedInt < minValue) {\r\n      setBitValue(minValue);\r\n      return;\r\n    }\r\n\r\n    if (parsedInt > maxValue) {\r\n      setBitValue(maxValue);\r\n      return;\r\n    }\r\n\r\n    setBitValue(parsedInt);\r\n  };\r\n\r\n  const handleInputFocused = (event: React.FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    event.target.select();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.control}>\r\n        <Grid container spacing={3}>\r\n          {/* title */}\r\n          <Grid item xs={12}>\r\n            <FormLabel>Switch for Day</FormLabel>\r\n          </Grid>\r\n\r\n          {/* bit buttons */}\r\n          <Grid container item xs={12} spacing={1}>\r\n            <Grid item xs />\r\n            {WeekData.map((o, index) => {\r\n              const toggled = (bitValue & o.value) === o.value;\r\n              return <BitGrid key={index} name={o.name} value={o.value} toggled={toggled} clickCallback={onBitClick} />;\r\n            })}\r\n            <Grid item xs />\r\n          </Grid>\r\n\r\n          {/* output and utils */}\r\n          <Grid container item xs={12} justify=\"center\" alignContent=\"center\" alignItems=\"center\" spacing={3}>\r\n            <Grid item>\r\n              <Button className={classes.utilButton} onClick={() => {\r\n                setBitValue(minValue);\r\n              }}>MIN</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField value={bitValue}\r\n                         onChange={handleInput}\r\n                         onFocus={handleInputFocused}\r\n                         type=\"number\"\r\n                         inputProps={{\r\n                           inputMode: 'numeric',\r\n                           pattern: '[0-9]*',\r\n                           style: { textAlign: 'center' },\r\n                           min: minValue,\r\n                           max: maxValue\r\n                         }} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button className={classes.utilButton} onClick={() => {\r\n                setBitValue(maxValue);\r\n              }}>MAX</Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  HashRouter,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport BitForWeek from './BitForWeek';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default function MainContent() {\r\n  return (\r\n    <main>\r\n      <Box mt={2} mb={2}>\r\n        <HashRouter>\r\n          <Switch>\r\n            <Route path=\"/\" component={BitForWeek} />\r\n          </Switch>\r\n        </HashRouter>\r\n      </Box>\r\n    </main>\r\n  );\r\n};","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport TopBar from './components/TopBar';\nimport MainContent from './components/MainContent';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}Sean Mars{' '}{new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nfunction App() {\n  return (\n    <Container>\n      <Box>\n        <TopBar />\n        <MainContent />\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}