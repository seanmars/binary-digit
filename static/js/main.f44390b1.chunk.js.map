{"version":3,"sources":["components/TopBar.tsx","data/WeekData.tsx","components/BitForWeek.tsx","components/MainContent.tsx","App.tsx","theme.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","title","TopBar","classes","className","AppBar","position","Toolbar","Typography","variant","WeekData","name","value","ReverseWeekData","control","padding","spacing","itemButton","width","height","border","itemBox","utilButton","BitGrid","props","toggled","clickCallback","Grid","item","Button","type","onClick","e","preventDefault","Box","Divider","mt","BitForWeek","maxValue","useState","bitValue","setBitValue","dayReverse","setDayReverse","onBitClick","reverseBit","oldValue","isReverse","newValue","data","reverse","forEach","o","index","Paper","container","xs","FormLabel","FormControlLabel","Switch","checked","onChange","event","label","map","justify","alignContent","alignItems","TextField","inputValue","target","parsedInt","parseInt","Number","isFinite","onFocus","select","inputProps","inputMode","pattern","style","textAlign","min","max","MainContent","mb","path","component","Copyright","color","align","Date","getFullYear","App","Container","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f44390b1.chunk.js","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Tools\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","interface WeekStruct {\n  name: string,\n  value: number\n}\n\nexport const WeekData: Array<WeekStruct> = [\n  {\n    name: '周一',\n    value: 1 << 6\n  },\n  {\n    name: '周二',\n    value: 1 << 5\n  },\n  {\n    name: '周三',\n    value: 1 << 4\n  },\n  {\n    name: '周四',\n    value: 1 << 3\n  },\n  {\n    name: '周五',\n    value: 1 << 2\n  },\n  {\n    name: '周六',\n    value: 1 << 1\n  },\n  {\n    name: '周七',\n    value: 1 << 0\n  },\n];\n\nexport const ReverseWeekData: Array<WeekStruct> = [\n  {\n    name: '周七',\n    value: 1 << 6\n  },\n  {\n    name: '周六',\n    value: 1 << 5\n  },\n  {\n    name: '周五',\n    value: 1 << 4\n  },\n  {\n    name: '周四',\n    value: 1 << 3\n  },\n  {\n    name: '周三',\n    value: 1 << 2\n  },\n  {\n    name: '周二',\n    value: 1 << 1\n  },\n  {\n    name: '周一',\n    value: 1 << 0\n  },\n];","import React, { useState } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Box, Button, Divider, FormLabel, TextField, Typography } from '@material-ui/core';\nimport { WeekData, ReverseWeekData } from '../data/WeekData';\nimport { Switch } from '@material-ui/core';\nimport { FormControlLabel } from '@material-ui/core';\n\n// noinspection TypeScriptValidateTypes\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n\n    itemButton: {\n      width: '8rem',\n      height: '8rem',\n      border: '.1rem solid'\n    },\n    itemBox: {\n      width: '100%',\n      height: '100%'\n    },\n\n    utilButton: {\n      border: '.1rem solid'\n    }\n  }),\n);\n\nconst BitGrid = (props: { name: string, value: number, toggled: boolean, clickCallback: ((bitValue: number) => void) | null }) => {\n  const classes = useStyles();\n  const { name, value, toggled, clickCallback } = props;\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (!clickCallback) {\n      return;\n    }\n\n    clickCallback(value);\n  };\n\n  return (\n    <Grid item>\n      <Button type=\"button\" className={classes.itemButton} onClick={handleClick}>\n        <Box className={classes.itemBox}>\n          <Typography variant=\"h6\">{name}</Typography>\n          <Divider />\n          <Box mt={1}>\n            <Typography variant=\"h3\">{toggled ? 1 : 0}</Typography>\n          </Box>\n        </Box>\n      </Button>\n    </Grid>\n  );\n};\n\nexport default function BitForWeek() {\n  const minValue: number = 0;\n  const maxValue: number = 127;\n\n  const classes = useStyles();\n  const [bitValue, setBitValue] = useState(0b00000000);\n  const [dayReverse, setDayReverse] = useState(false);\n\n  const onBitClick = (value: number) => {\n    const v = bitValue ^ value;\n    setBitValue(v);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    let parsedInt = parseInt(inputValue);\n    if (!Number.isFinite(parsedInt)) {\n      return;\n    }\n\n    if (parsedInt < minValue) {\n      setBitValue(minValue);\n      return;\n    }\n\n    if (parsedInt > maxValue) {\n      setBitValue(maxValue);\n      return;\n    }\n\n    setBitValue(parsedInt);\n  };\n\n  const handleInputFocused = (event: React.FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    event.target.select();\n  };\n\n  const handleDayReverse = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const isReverse = !dayReverse;\n    setDayReverse(isReverse);\n    setBitValue(reverseBit(bitValue, isReverse));\n  };\n\n  const reverseBit = (oldValue: number, isReverse: boolean) => {\n    let newValue: number = 0;\n    const data = [...(isReverse ? ReverseWeekData : WeekData)].reverse();\n    const prevData = isReverse ? WeekData : ReverseWeekData;\n\n    prevData.forEach((o, index) => {\n      newValue += ((oldValue & o.value) !== 0) ? data[index].value : 0;\n    });\n\n    return newValue;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.control}>\n        <Grid container spacing={3}>\n          {/* title */}\n          <Grid item xs={12}>\n            <FormLabel>Switch for Day</FormLabel>\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControlLabel\n              control={<Switch checked={dayReverse} onChange={handleDayReverse} />}\n              label=\"反轉\"\n            />\n          </Grid>\n\n          {/* bit buttons */}\n          <Grid container item xs={12} spacing={1}>\n            <Grid item xs />\n            <BitGrid key={-1} name=\"-\" value={0} toggled={false} clickCallback={null} />\n            {(dayReverse ? ReverseWeekData : WeekData).map((o, index) => {\n              const toggled = (bitValue & o.value) !== 0;\n              return <BitGrid key={index} name={o.name} value={o.value} toggled={toggled} clickCallback={onBitClick} />;\n            })}\n            <Grid item xs />\n          </Grid>\n\n          {/* output and utils */}\n          <Grid container item xs={12} justify=\"center\" alignContent=\"center\" alignItems=\"center\" spacing={3}>\n            <Grid item>\n              <Button className={classes.utilButton} onClick={() => {\n                setBitValue(minValue);\n              }}>MIN</Button>\n            </Grid>\n            <Grid item>\n              <TextField value={bitValue}\n                         onChange={handleInput}\n                         onFocus={handleInputFocused}\n                         type=\"number\"\n                         inputProps={{\n                           inputMode: 'numeric',\n                           pattern: '[0-9]*',\n                           style: { textAlign: 'center' },\n                           min: minValue,\n                           max: maxValue\n                         }} />\n            </Grid>\n            <Grid item>\n              <Button className={classes.utilButton} onClick={() => {\n                setBitValue(maxValue);\n              }}>MAX</Button>\n            </Grid>\n          </Grid>\n\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport BitForWeek from './BitForWeek';\nimport { Box } from '@material-ui/core';\n\nexport default function MainContent() {\n  return (\n    <main>\n      <Box mt={2} mb={2}>\n        <HashRouter>\n          <Switch>\n            <Route path=\"/\" component={BitForWeek} />\n          </Switch>\n        </HashRouter>\n      </Box>\n    </main>\n  );\n};","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport TopBar from './components/TopBar';\nimport MainContent from './components/MainContent';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}Sean Mars{' '}{new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nfunction App() {\n  return (\n    <Container>\n      <Box>\n        <TopBar />\n        <MainContent />\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}